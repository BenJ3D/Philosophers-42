make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Mon Jun 13 17:41:38 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = VSCODE_WSL_EXT_LOCATION/up
# default
.SHELLFLAGS := -c
# makefile (from 'Makefile', line 48)
OBJ = $(addprefix $(OBJ_PATH), $(OBJ_NAME))
# makefile (from 'Makefile', line 46)
SRC = $(addprefix $(SRC_PATH)/,$(SRC_NAME))
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'Makefile', line 23)
CPPFLAGS = -I./includes/
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /home/ben/projet/Philosophers42
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"fr","availableLanguages":{"*":"fr"},"_languagePackId":"25fe6a3290ec415596628d4afc87a88c.fr","_translationsConfigFile":"/home/ben/.vscode-server/data/clp/25fe6a3290ec415596628d4afc87a88c.fr/tcf.json","_cacheRoot":"/home/ben/.vscode-server/data/clp/25fe6a3290ec415596628d4afc87a88c.fr","_resolvedLanguagePackCoreLocation":"/home/ben/.vscode-server/data/clp/25fe6a3290ec415596628d4afc87a88c.fr/c3511e6c69bb39013c4a4b7b9566ec1ca73fc4d5","_corruptedFile":"/home/ben/.vscode-server/data/clp/25fe6a3290ec415596628d4afc87a88c.fr/corrupted.info","_languagePackSupport":true}
# environment
_ = /home/ben/.vscode-server/bin/c3511e6c69bb39013c4a4b7b9566ec1ca73fc4d5/node
# makefile (from 'Makefile', line 54)
CFLAGS = 
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# 'override' directive
GNUMAKEFLAGS := 
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from 'Makefile', line 55)
SANITIZE = 
# environment
VSCODE_CWD = /mnt/c/Users/ben13/AppData/Local/Programs/Microsoft VS Code
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/ben/.vscode-server/bin/c3511e6c69bb39013c4a4b7b9566ec1ca73fc4d5/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files (x86)/VMware/VMware Player/bin/:/mnt/c/Program Files/Oculus/Support/oculus-runtime:/mnt/c/Program Files (x86)/Common Files/Intel/Shared Libraries/redist/intel64/compiler:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Program Files/Microsoft SQL Server/120/Tools/Binn/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/dotnet/:/mnt/c/Program Files/PuTTY/:/mnt/c/Program Files/Common Files/Autodesk Shared/:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Users/ben13/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/ben13/AppData/Local/atom/bin:/mnt/c/Program Files/JetBrains/CLion 2022.1.1/bin:/mnt/c/Program Files/JetBrains/DataGrip 2021.2.4/bin:/mnt/c/Users/ben13/AppData/Local/GitHubDesktop/bin:/mnt/c/Users/ben13/AppData/Local/Android/Sdk/platform-tools:/mnt/c/Users/ben13/AppData/Local/Android/Sdk/tools:/mnt/c/Users/ben13/.dotnet/tools:/mnt/c/Users/ben13/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/ben13/AppData/Local/Keybase/
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# makefile (from 'Makefile', line 19)
SRC_PATH = ./srcs/
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /tmp/vscode-ipc-bee28aec-77f8-4c11-a31f-f2e6ee646768.sock
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# automatic
%F = $(notdir $%)
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /home/ben/projet/Philosophers42
# default
.LOADED := 
# environment
WSL_INTEROP = /run/WSL/18_interop
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/ben
# environment
LOGNAME = ben
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
ZSH = /home/ben/.oh-my-zsh
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 0
# makefile (from 'Makefile', line 52)
CC = gcc $(CFLAGS) $(SANITIZE) $(LLDBFLAG)
# makefile (from 'Makefile', line 30)
SRC_NAME = test.c philo.c main.c error.c parsing.c tools.c check_arg.c routines.c message_philo.c time.c debug.c
# default
MAKE_VERSION := 4.2.1
# environment
USER = ben
# makefile
.DEFAULT_GOAL := all
# makefile (from 'Makefile', line 15)
NAME = philo
# environment
LESS = -R
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/ben13/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# default
MAKE_COMMAND := make
# environment
OLDPWD = /mnt/c/Users/ben13/AppData/Local/Programs/Microsoft VS Code
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# environment
VSCODE_HANDLES_SIGPIPE = true
# 'override' directive
.SHELLSTATUS := 0
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
PAGER = less
# environment
LC_ALL = C
# makefile (from 'Makefile', line 25)
HEADER = ./includes/philosophers.h
# makefile (from 'Makefile', line 21)
OBJ_PATH = ./objs/
# environment
HOSTTYPE = x86_64
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from 'Makefile', line 56)
LLDBFLAG = -g3
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# makefile (from 'Makefile', line 42)
OBJ_NAME = $(SRC_NAME:.c=.o)
# default
.RECIPEPREFIX := 
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu
# variable set hash-table stats:
# Load=82/1024=8%, Rehash=0, Collisions=9/120=8%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2064, inode 81188): 13 files, no impossibilities.
# includes (device 2064, inode 115254): 1 files, no impossibilities so far.
# srcs (device 2064, inode 115257): 14 files, no impossibilities so far.

# 28 files, no impossibilities in 3 directories.

# Implicit Rules

objs/%.o: srcs/%.c includes/philosophers.h Makefile
#  recipe to execute (from 'Makefile', line 75):
	@mkdir $(OBJ_PATH) 2> /dev/null || true
	$(CC) $(CPPFLAGS) -o $@ -c $<

# 1 implicit rules, 0 (0.0%) terminal.

# Files

all,:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

objs/routines.o: srcs/routines.c includes/philosophers.h Makefile
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'routines'
#  Last modified 2022-06-13 17:41:10.422089174
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 75):
	@mkdir $(OBJ_PATH) 2> /dev/null || true
	$(CC) $(CPPFLAGS) -o $@ -c $<

objs/main.o: srcs/main.c includes/philosophers.h Makefile
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'main'
#  Last modified 2022-06-13 17:41:10.322089173
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 75):
	@mkdir $(OBJ_PATH) 2> /dev/null || true
	$(CC) $(CPPFLAGS) -o $@ -c $<

all: philo
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

philo: objs/test.o objs/philo.o objs/main.o objs/error.o objs/parsing.o objs/tools.o objs/check_arg.o objs/routines.o objs/message_philo.o objs/time.o objs/debug.o
#  Implicit rule search has not been done.
#  Last modified 2022-06-13 17:41:10.542089174
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 65):
	@echo "\033[34mCreation of $(NAME) on linux ...\033[0m"
	@$(CC) $(OBJ) -o $@ -lpthread
	@echo "\033[32m$(NAME) created\n\033[0m"

objs/error.o: srcs/error.c includes/philosophers.h Makefile
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'error'
#  Last modified 2022-06-13 17:41:10.342089173
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 75):
	@mkdir $(OBJ_PATH) 2> /dev/null || true
	$(CC) $(CPPFLAGS) -o $@ -c $<

objs/message_philo.o: srcs/message_philo.c includes/philosophers.h Makefile
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'message_philo'
#  Last modified 2022-06-13 17:41:10.442089174
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 75):
	@mkdir $(OBJ_PATH) 2> /dev/null || true
	$(CC) $(CPPFLAGS) -o $@ -c $<

.PHONY: all, clean, fclean, re
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
includes/philosophers.h:
#  Implicit rule search has been done.
#  Last modified 2022-06-10 18:04:38.747673751
#  File has been updated.
#  Successfully updated.

# Not a target:
srcs/tools.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-07 19:16:59.356168789
#  File has been updated.
#  Successfully updated.

objs/parsing.o: srcs/parsing.c includes/philosophers.h Makefile
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'parsing'
#  Last modified 2022-06-13 17:41:10.362089173
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 75):
	@mkdir $(OBJ_PATH) 2> /dev/null || true
	$(CC) $(CPPFLAGS) -o $@ -c $<

git:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 97):
	@git add .
	@printf "Message of the commit: " && read msg && git commit -m "$$msg"
	@git push

# Not a target:
srcs/routines.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-13 17:30:31.212088858
#  File has been updated.
#  Successfully updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-13 17:41:09.302089173
#  File has been updated.
#  Successfully updated.

# Not a target:
srcs/main.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-11 08:57:00.747678226
#  File has been updated.
#  Successfully updated.

objs/debug.o: srcs/debug.c includes/philosophers.h Makefile
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'debug'
#  Last modified 2022-06-13 17:41:10.482089174
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 75):
	@mkdir $(OBJ_PATH) 2> /dev/null || true
	$(CC) $(CPPFLAGS) -o $@ -c $<

objs/test.o: srcs/test.c includes/philosophers.h Makefile
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'test'
#  Last modified 2022-06-13 17:41:10.272089173
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 75):
	@mkdir $(OBJ_PATH) 2> /dev/null || true
	$(CC) $(CPPFLAGS) -o $@ -c $<

# Not a target:
srcs/message_philo.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-13 17:30:31.212088858
#  File has been updated.
#  Successfully updated.

objs/check_arg.o: srcs/check_arg.c includes/philosophers.h Makefile
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'check_arg'
#  Last modified 2022-06-13 17:41:10.402089174
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 75):
	@mkdir $(OBJ_PATH) 2> /dev/null || true
	$(CC) $(CPPFLAGS) -o $@ -c $<

# Not a target:
srcs/parsing.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-07 19:16:59.356168789
#  File has been updated.
#  Successfully updated.

# Not a target:
srcs/error.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-07 19:16:59.356168789
#  File has been updated.
#  Successfully updated.

fclean,:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

objs/philo.o: srcs/philo.c includes/philosophers.h Makefile
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'philo'
#  Last modified 2022-06-13 17:41:10.302089173
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 75):
	@mkdir $(OBJ_PATH) 2> /dev/null || true
	$(CC) $(CPPFLAGS) -o $@ -c $<

fclean: clean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 85):
	@echo "\033[33mRemoval of $(NAME)...\033[0m"
	@rm -rf $(NAME)
	@echo "\033[31mBinary $(NAME) deleted\n\033[0m"

 
objs/time.o: srcs/time.c includes/philosophers.h Makefile
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'time'
#  Last modified 2022-06-13 17:41:10.462089174
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 75):
	@mkdir $(OBJ_PATH) 2> /dev/null || true
	$(CC) $(CPPFLAGS) -o $@ -c $<

# Not a target:
srcs/test.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-07 19:16:59.356168789
#  File has been updated.
#  Successfully updated.

# Not a target:
srcs/check_arg.c:
#  Implicit rule search has been done.
#  Last modified 2022-05-28 22:34:43.622282512
#  File has been updated.
#  Successfully updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean,:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

re: fclean all
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 79):
	@echo "\033[33mRemoval of .o files of $(NAME) ...\033[0m"
	@rm -f $(OBJ)
	@rmdir $(OBJ_PATH) 2> /dev/null || true
	@echo "\033[31mFiles .o deleted\n\033[0m"

# Not a target:
srcs/time.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-10 18:04:38.747673751
#  File has been updated.
#  Successfully updated.

# Not a target:
srcs/debug.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-07 19:16:59.356168789
#  File has been updated.
#  Successfully updated.

norme:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 92):
	norminette ./srcs/
	norminette ./includes/*.h

objs/tools.o: srcs/tools.c includes/philosophers.h Makefile
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'tools'
#  Last modified 2022-06-13 17:41:10.382089173
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 75):
	@mkdir $(OBJ_PATH) 2> /dev/null || true
	$(CC) $(CPPFLAGS) -o $@ -c $<

# Not a target:
srcs/philo.c:
#  Implicit rule search has been done.
#  Last modified 2022-06-13 17:39:51.422089135
#  File has been updated.
#  Successfully updated.

# files hash-table stats:
# Load=37/1024=4%, Rehash=0, Collisions=9/145=6%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 75 / storage = 752 B / avg = 10 B
# current buf: size = 8162 B / used = 752 B / count = 75 / avg = 10 B

# strcache performance: lookups = 155 / hit rate = 51%
# hash-table stats:
# Load=75/8192=1%, Rehash=0, Collisions=2/155=1%
# Finished Make data base on Mon Jun 13 17:41:38 2022

 
